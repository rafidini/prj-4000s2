# Copyright ESIEE (2009) 
#
# m.couprie@esiee.fr
#
# This software is an image processing library whose purpose is to be
# used primarily for research and teaching.
#
# This software is governed by the CeCILL  license under French law and
# abiding by the rules of distribution of free software. You can  use, 
# modify and/ or redistribute the software under the terms of the CeCILL
# license as circulated by CEA, CNRS and INRIA at the following URL
# "http://www.cecill.info". 
#
# As a counterpart to the access to the source code and  rights to copy,
# modify and redistribute granted by the license, users are provided only
# with a limited warranty  and the software's author,  the holder of the
# economic rights,  and the successive licensors  have only  limited
# liability. 
#
# In this respect, the user's attention is drawn to the risks associated
# with loading,  using,  modifying and/or developing or reproducing the
# software by the user in light of its specific status of free software,
# that may mean  that it is complicated to manipulate,  and  that  also
# therefore means  that it is reserved for developers  and  experienced
# professionals having in-depth computer knowledge. Users are therefore
# encouraged to load and test the software's suitability as regards their
# requirements in conditions enabling the security of their systems and/or 
# data to be ensured and,  more generally, to use and operate it in the 
# same conditions as regards security. 
#
# The fact that you are presently reading this means that you have had
# knowledge of the CeCILL license and that you accept its terms.
#
#sh
# The next line is executed by /bin/sh, but not Tcl \
exec tclsh $0 $1 $2 $3

# reads a file
#-----------------------------------
proc my_read_val {filename} {
  set input [open $filename]
  set tag [gets $input]
  set line [gets $input]
  scan $line "%d %g" v1 v2
  close $input
  return $v2
}

if {$argc != 2} { 
  puts stderr "usage: ppm2gifanim first last"
  exit 
}

# get input image file name as first argument
set PPMFILTER(first) [lindex $argv 0]
set PPMFILTER(last) [lindex $argv 1]
set PPMFILTER(seuil) 50000

set data ""
set i $PPMFILTER(first)
while {$i <= $PPMFILTER(last)} {
  set filecount [format "%08d" $i]
  if {[file exists "$filecount.ppm"]} {
    catch { exec rgb2hls "$filecount.ppm" _h _l _s } mes
    catch { exec selndg _l 0 0 _s } mes
    catch { exec volume _s _v } mes
    set v [expr [my_read_val _v] / 255]
    puts "$filecount $v"
    if {$v > $PPMFILTER(seuil)} {
      puts "supprimer $filecount.ppm"
      catch { exec rm -f $filecount.ppm } mes
    }
  }
  set i [expr $i+1]
}
