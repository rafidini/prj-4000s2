# Copyright ESIEE (2009) 
#
# m.couprie@esiee.fr
#
# This software is an image processing library whose purpose is to be
# used primarily for research and teaching.
#
# This software is governed by the CeCILL  license under French law and
# abiding by the rules of distribution of free software. You can  use, 
# modify and/ or redistribute the software under the terms of the CeCILL
# license as circulated by CEA, CNRS and INRIA at the following URL
# "http://www.cecill.info". 
#
# As a counterpart to the access to the source code and  rights to copy,
# modify and redistribute granted by the license, users are provided only
# with a limited warranty  and the software's author,  the holder of the
# economic rights,  and the successive licensors  have only  limited
# liability. 
#
# In this respect, the user's attention is drawn to the risks associated
# with loading,  using,  modifying and/or developing or reproducing the
# software by the user in light of its specific status of free software,
# that may mean  that it is complicated to manipulate,  and  that  also
# therefore means  that it is reserved for developers  and  experienced
# professionals having in-depth computer knowledge. Users are therefore
# encouraged to load and test the software's suitability as regards their
# requirements in conditions enabling the security of their systems and/or 
# data to be ensured and,  more generally, to use and operate it in the 
# same conditions as regards security. 
#
# The fact that you are presently reading this means that you have had
# knowledge of the CeCILL license and that you accept its terms.
#
#sh
# The next line is executed by /bin/sh, but not Tcl \
exec tclsh $0 $1 $2

if {$argc != 2} { 
  puts stderr "usage: plot list_in out.ps"
  exit 
}

set PINK "$env(PINK)"
source [file join "$PINK" "tcl" "my_exec.tcl"]
source [file join "$PINK" "tcl" "my_read.tcl"]
source [file join "$PINK" "tcl" "my_write.tcl"]

# get input image file name as first argument
set list_in [lindex $argv 0]
set outfile [lindex $argv 1]

set tmpname "/tmp/_plot_tmp"
set comname "/tmp/_plot_com"
set list [my_read_text $list_in]
set tag [lindex $list 0]
set len [lindex $list 1]
if {$tag == "s"} {
  set output [open $tmpname w]
  for {set j 0} {$j < $len } {incr j 1} {
    puts $output "[lindex $list [expr 2 + $j*2]] [lindex $list [expr 3 + $j*2]]"
  }
  close $output
} elseif {$tag == "e"} {
  set output [open $tmpname w]
  for {set j 0} {$j < $len } {incr j 1} {
    puts $output "$j [lindex $list [expr 2 + $j]]"
  }
  close $output
} else {
  puts stderr "plot: bad tag: $tag"
  exit   
}

# without lines (uncomment) : 
# my_write_text $comname "set terminal postscript eps 22\nset output \"$outfile\"\nplot \"$tmpname\" notitle"
# with lines (uncomment) : 
my_write_text $comname "set terminal postscript eps 22\nset output \"$outfile\"\nplot \"$tmpname\" notitle with lines"

puts $comname

my_exec_q "gnuplot $comname"

my_exec_q rm $tmpname
my_exec_q rm $comname
