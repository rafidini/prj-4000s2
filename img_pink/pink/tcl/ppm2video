# Copyright ESIEE (2009) 
#
# m.couprie@esiee.fr
#
# This software is an image processing library whose purpose is to be
# used primarily for research and teaching.
#
# This software is governed by the CeCILL  license under French law and
# abiding by the rules of distribution of free software. You can  use, 
# modify and/ or redistribute the software under the terms of the CeCILL
# license as circulated by CEA, CNRS and INRIA at the following URL
# "http://www.cecill.info". 
#
# As a counterpart to the access to the source code and  rights to copy,
# modify and redistribute granted by the license, users are provided only
# with a limited warranty  and the software's author,  the holder of the
# economic rights,  and the successive licensors  have only  limited
# liability. 
#
# In this respect, the user's attention is drawn to the risks associated
# with loading,  using,  modifying and/or developing or reproducing the
# software by the user in light of its specific status of free software,
# that may mean  that it is complicated to manipulate,  and  that  also
# therefore means  that it is reserved for developers  and  experienced
# professionals having in-depth computer knowledge. Users are therefore
# encouraged to load and test the software's suitability as regards their
# requirements in conditions enabling the security of their systems and/or 
# data to be ensured and,  more generally, to use and operate it in the 
# same conditions as regards security. 
#
# The fact that you are presently reading this means that you have had
# knowledge of the CeCILL license and that you accept its terms.
#
#sh
# The next line is executed by /bin/sh, but not Tcl \
exec tclsh $0 $1 $2 $3

if {$argc != 3} { 
  puts stderr "usage: ppm2video prefix frequency(fps) outfilename"
  exit 
}
# reads a pgm image header
#-----------------------------------
proc my_readpgmheader {filename} {
  set input [open $filename]
  set tag [gets $input]
  set line [gets $input]
  while {([string index $line 0] == "#") || ([string length $line] == 0)} {
    set line [gets $input]
  }
  scan $line "%d %d" rs cs
  close $input
  return [list $tag $rs $cs]
}

# get input image file name as first argument
set PPM2VIDEO(infilename) [lindex $argv 0]
set PPM2VIDEO(fr) [lindex $argv 1]
set PPM2VIDEO(outfilename) [lindex $argv 2]

set filelist [glob "$PPM2VIDEO(infilename)*.ppm"]
#set filelist [glob "$PPM2VIDEO(infilename)*.pgm"]

foreach file $filelist {
  set name [file rootname $file]
  catch { exec convert -quality 95 $file "$name.jpg" } mes
#  catch { exec convert $file "$name.png" } mes
}

#puts $filelist

set h [my_readpgmheader [lindex $filelist 0]]
#puts $h
set PPM2VIDEO(rs) [lindex $h 1]
set PPM2VIDEO(cs) [lindex $h 2]
#puts $PPM2VIDEO(rs)
#puts $PPM2VIDEO(cs)

catch { exec mencoder mf://*.jpg -mf w=$PPM2VIDEO(rs):h=$PPM2VIDEO(cs):fps=$PPM2VIDEO(fr):type=jpg -ovc lavc -lavcopts vcodec=mpeg4 -oac copy -o $PPM2VIDEO(outfilename) } mes

puts $mes

#catch { exec png2avi $PPM2VIDEO(infilename) $PPM2VIDEO(rs) $PPM2VIDEO(cs) $PPM2VIDEO(fr) $PPM2VIDEO(outfilename) } mes
