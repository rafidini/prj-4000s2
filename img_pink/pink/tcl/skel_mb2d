# Copyright ESIEE (2009) 
#
# m.couprie@esiee.fr
#
# This software is an image processing library whose purpose is to be
# used primarily for research and teaching.
#
# This software is governed by the CeCILL  license under French law and
# abiding by the rules of distribution of free software. You can  use, 
# modify and/ or redistribute the software under the terms of the CeCILL
# license as circulated by CEA, CNRS and INRIA at the following URL
# "http://www.cecill.info". 
#
# As a counterpart to the access to the source code and  rights to copy,
# modify and redistribute granted by the license, users are provided only
# with a limited warranty  and the software's author,  the holder of the
# economic rights,  and the successive licensors  have only  limited
# liability. 
#
# In this respect, the user's attention is drawn to the risks associated
# with loading,  using,  modifying and/or developing or reproducing the
# software by the user in light of its specific status of free software,
# that may mean  that it is complicated to manipulate,  and  that  also
# therefore means  that it is reserved for developers  and  experienced
# professionals having in-depth computer knowledge. Users are therefore
# encouraged to load and test the software's suitability as regards their
# requirements in conditions enabling the security of their systems and/or 
# data to be ensured and,  more generally, to use and operate it in the 
# same conditions as regards security. 
#
# The fact that you are presently reading this means that you have had
# knowledge of the CeCILL license and that you accept its terms.
#
 #sh
 # The next line is executed by /bin/sh, but not Tcl \
 exec tclsh $0 $1 $2 $3

 if {($argc != 3)} { 
   puts stderr "usage: manzanera2d in nsteps out"
   exit 
 }

set PINK "$env(PINK)"
set MASKS "$env(PINK)/masks"
source "$PINK/tcl/my_exec.tcl"

global MB2D
set MB2D(name) "manzanera2d"
set MB2D(infilename) [lindex $argv 0]
set MB2D(nsteps) [lindex $argv 1]
set MB2D(outfilename) [lindex $argv 2]
my_exec_q cp $MB2D(infilename) "/tmp/$MB2D(name)_t0" 

# reads a file
#-----------------------------------
proc my_read_val {filename} {
  set input [open $filename]
  set tag [gets $input]
  set line [gets $input]
  scan $line "%d %d" v1 v2
  close $input
  return $v2
}

# One thinning step
#-----------------------------------
proc one_step {} {
    global MB2D
    global MASKS
    my_exec_q cp "/tmp/$MB2D(name)_t0" "/tmp/$MB2D(name)_t0_sav" 

    my_exec_q hitormiss "/tmp/$MB2D(name)_t0" "$MASKS/MB2Da1h.pgm" "$MASKS/MB2Da1m.pgm" "/tmp/$MB2D(name)_t01"
    my_exec_q mv "/tmp/$MB2D(name)_t01" "/tmp/$MB2D(name)_t1"
    my_exec_q hitormiss "/tmp/$MB2D(name)_t0" "$MASKS/MB2Da2h.pgm" "$MASKS/MB2Da2m.pgm" "/tmp/$MB2D(name)_t01"
    my_exec_q max "/tmp/$MB2D(name)_t1" "/tmp/$MB2D(name)_t01" "/tmp/$MB2D(name)_t1"
    my_exec_q hitormiss "/tmp/$MB2D(name)_t0" "$MASKS/MB2Da3h.pgm" "$MASKS/MB2Da3m.pgm" "/tmp/$MB2D(name)_t01"
    my_exec_q max "/tmp/$MB2D(name)_t1" "/tmp/$MB2D(name)_t01" "/tmp/$MB2D(name)_t1"
    my_exec_q hitormiss "/tmp/$MB2D(name)_t0" "$MASKS/MB2Da4h.pgm" "$MASKS/MB2Da4m.pgm" "/tmp/$MB2D(name)_t01"
    my_exec_q max "/tmp/$MB2D(name)_t1" "/tmp/$MB2D(name)_t01" "/tmp/$MB2D(name)_t1"
    my_exec_q hitormiss "/tmp/$MB2D(name)_t0" "$MASKS/MB2Da5h.pgm" "$MASKS/MB2Da5m.pgm" "/tmp/$MB2D(name)_t01"
    my_exec_q max "/tmp/$MB2D(name)_t1" "/tmp/$MB2D(name)_t01" "/tmp/$MB2D(name)_t1"
    my_exec_q hitormiss "/tmp/$MB2D(name)_t0" "$MASKS/MB2Da6h.pgm" "$MASKS/MB2Da6m.pgm" "/tmp/$MB2D(name)_t01"
    my_exec_q max "/tmp/$MB2D(name)_t1" "/tmp/$MB2D(name)_t01" "/tmp/$MB2D(name)_t1"
    my_exec_q hitormiss "/tmp/$MB2D(name)_t0" "$MASKS/MB2Da7h.pgm" "$MASKS/MB2Da7m.pgm" "/tmp/$MB2D(name)_t01"
    my_exec_q max "/tmp/$MB2D(name)_t1" "/tmp/$MB2D(name)_t01" "/tmp/$MB2D(name)_t1"
    my_exec_q hitormiss "/tmp/$MB2D(name)_t0" "$MASKS/MB2Da8h.pgm" "$MASKS/MB2Da8m.pgm" "/tmp/$MB2D(name)_t01"
    my_exec_q max "/tmp/$MB2D(name)_t1" "/tmp/$MB2D(name)_t01" "/tmp/$MB2D(name)_t1"

    my_exec_q hitormiss "/tmp/$MB2D(name)_t0" "$MASKS/MB2Db1h.pgm" "$MASKS/MB2Db1m.pgm" "/tmp/$MB2D(name)_t01"
    my_exec_q mv "/tmp/$MB2D(name)_t01" "/tmp/$MB2D(name)_t2"
    my_exec_q hitormiss "/tmp/$MB2D(name)_t0" "$MASKS/MB2Db2h.pgm" "$MASKS/MB2Db2m.pgm" "/tmp/$MB2D(name)_t01"
    my_exec_q max "/tmp/$MB2D(name)_t2" "/tmp/$MB2D(name)_t01" "/tmp/$MB2D(name)_t2"
    my_exec_q hitormiss "/tmp/$MB2D(name)_t0" "$MASKS/MB2Db3h.pgm" "$MASKS/MB2Db3m.pgm" "/tmp/$MB2D(name)_t01"
    my_exec_q max "/tmp/$MB2D(name)_t2" "/tmp/$MB2D(name)_t01" "/tmp/$MB2D(name)_t2"
    my_exec_q hitormiss "/tmp/$MB2D(name)_t0" "$MASKS/MB2Db4h.pgm" "$MASKS/MB2Db4m.pgm" "/tmp/$MB2D(name)_t01"
    my_exec_q max "/tmp/$MB2D(name)_t2" "/tmp/$MB2D(name)_t01" "/tmp/$MB2D(name)_t2"

    my_exec_q sub "/tmp/$MB2D(name)_t1" "/tmp/$MB2D(name)_t2" "/tmp/$MB2D(name)_t3"
    
    my_exec_q sub "/tmp/$MB2D(name)_t0" "/tmp/$MB2D(name)_t3" "/tmp/$MB2D(name)_t0"

    my_exec_q sub "/tmp/$MB2D(name)_t0_sav" "/tmp/$MB2D(name)_t0" "/tmp/$MB2D(name)_t0_sav"
    my_exec_q area "/tmp/$MB2D(name)_t0_sav" "/tmp/$MB2D(name)_area"
    set delta [my_read_val "/tmp/$MB2D(name)_area"]
    return $delta
}

if {$MB2D(nsteps) != -1} {
    for {set j 1} {$j<=$MB2D(nsteps)} {incr j} { 
	set delta [one_step]
	puts "step: $j delta: $delta" 
    }
} else {
    set delta 1
    for {set j 1} {$delta != 0} {incr j} { 
	set delta [one_step]
	puts "step: $j delta: $delta" 
    }    
}

my_exec_q cp "/tmp/$MB2D(name)_t0" $MB2D(outfilename) 
