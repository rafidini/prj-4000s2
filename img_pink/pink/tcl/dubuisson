# Copyright ESIEE (2009) 
#
# m.couprie@esiee.fr
#
# This software is an image processing library whose purpose is to be
# used primarily for research and teaching.
#
# This software is governed by the CeCILL  license under French law and
# abiding by the rules of distribution of free software. You can  use, 
# modify and/ or redistribute the software under the terms of the CeCILL
# license as circulated by CEA, CNRS and INRIA at the following URL
# "http://www.cecill.info". 
#
# As a counterpart to the access to the source code and  rights to copy,
# modify and redistribute granted by the license, users are provided only
# with a limited warranty  and the software's author,  the holder of the
# economic rights,  and the successive licensors  have only  limited
# liability. 
#
# In this respect, the user's attention is drawn to the risks associated
# with loading,  using,  modifying and/or developing or reproducing the
# software by the user in light of its specific status of free software,
# that may mean  that it is complicated to manipulate,  and  that  also
# therefore means  that it is reserved for developers  and  experienced
# professionals having in-depth computer knowledge. Users are therefore
# encouraged to load and test the software's suitability as regards their
# requirements in conditions enabling the security of their systems and/or 
# data to be ensured and,  more generally, to use and operate it in the 
# same conditions as regards security. 
#
# The fact that you are presently reading this means that you have had
# knowledge of the CeCILL license and that you accept its terms.
#
 #sh
 # The next line is executed by /bin/sh, but not Tcl \
 exec tclsh $0 $1 $2 $3 $4

 if {(($argc != 3) && ($argc != 4))} { 
   puts stderr "usage: dubuisson in1 in2 \[codedist\] out"
   exit 
 }

puts "warning: obsolete - use distsets instead"

set PINK "$env(PINK)"
source "$PINK/tcl/my_exec.tcl"

global DUBUISSON
set DUBUISSON(name) "dubuisson"
set DUBUISSON(infilename1) [lindex $argv 0]
set DUBUISSON(infilename2) [lindex $argv 1]
if {($argc == 2)} { 
   set DUBUISSON(codedist) 0 
# approximate euclidean distance (truncated)
} else {
   set DUBUISSON(codedist) [lindex $argv 2]
}
set DUBUISSON(outfilename) [lindex $argv [expr $argc - 1]]

proc tmpfile {tmpname} {
  global DUBUISSON
  return [file join "/tmp" "$DUBUISSON(infilename1)_$DUBUISSON(name)_$tmpname"]
}

my_exec_q cp $DUBUISSON(infilename1) [tmpfile t1] 
my_exec_q cp $DUBUISSON(infilename2) [tmpfile t2] 

# reads a file
#-----------------------------------
proc my_read_val {filename} {
  set input [open $filename]
  set tag [gets $input]
  set line [gets $input]
  scan $line "%g" v1
  close $input
  return $v1
}

my_exec_q dist [tmpfile t1] $DUBUISSON(codedist) [tmpfile d1]
my_exec_q dist [tmpfile t2] $DUBUISSON(codedist) [tmpfile d2]
my_exec_q average1 [tmpfile d1] [tmpfile t2] [tmpfile m1]
my_exec_q average1 [tmpfile d2] [tmpfile t1] [tmpfile m2]

set m1 [my_read_val [tmpfile m1]]
set m2 [my_read_val [tmpfile m2]]
if {($m1 > $m2)} { 
   set max $m1
} else {
   set max $m2
}

set output [open $DUBUISSON(outfilename) w]
puts $output "s 1"
puts $output "0 $max"
close $output
#puts "dubuisson distance: $max"

foreach file [glob -nocomplain [tmpfile "*"]] {
  catch {exec rm $file} result
}
