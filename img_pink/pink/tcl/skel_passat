# Copyright ESIEE (2009) 
#
# m.couprie@esiee.fr
#
# This software is an image processing library whose purpose is to be
# used primarily for research and teaching.
#
# This software is governed by the CeCILL  license under French law and
# abiding by the rules of distribution of free software. You can  use, 
# modify and/ or redistribute the software under the terms of the CeCILL
# license as circulated by CEA, CNRS and INRIA at the following URL
# "http://www.cecill.info". 
#
# As a counterpart to the access to the source code and  rights to copy,
# modify and redistribute granted by the license, users are provided only
# with a limited warranty  and the software's author,  the holder of the
# economic rights,  and the successive licensors  have only  limited
# liability. 
#
# In this respect, the user's attention is drawn to the risks associated
# with loading,  using,  modifying and/or developing or reproducing the
# software by the user in light of its specific status of free software,
# that may mean  that it is complicated to manipulate,  and  that  also
# therefore means  that it is reserved for developers  and  experienced
# professionals having in-depth computer knowledge. Users are therefore
# encouraged to load and test the software's suitability as regards their
# requirements in conditions enabling the security of their systems and/or 
# data to be ensured and,  more generally, to use and operate it in the 
# same conditions as regards security. 
#
# The fact that you are presently reading this means that you have had
# knowledge of the CeCILL license and that you accept its terms.
#
#sh
# The next line is executed by /bin/sh, but not Tcl \
exec tclsh $0 $1 $2 $3

if {($argc != 3)} { 
  puts stderr "usage: passat in prio out"
  exit 
}

set PINK "$env(PINK)"
source "$PINK/tcl/my_exec.tcl"

global PASSAT
set PASSAT(name) "passat"
set PASSAT(infilename) [lindex $argv 0]
set PASSAT(prio) [lindex $argv 1]
set PASSAT(outfilename) [lindex $argv 2]

# reads a file
#-----------------------------------
proc my_read_val {filename} {
  set input [open $filename]
  set tag [gets $input]
  set line [gets $input]
  scan $line "%d" v1
  close $input
  return $v1
}

proc tmpfile {tmpname} {
  global PASSAT
  return [file join "/tmp" "$PASSAT(name)_$tmpname"]
}


my_exec_q skeleton $PASSAT(infilename) $PASSAT(prio) 26 [tmpfile 1]
my_exec_q simplepair [tmpfile 1] [tmpfile 2]
my_exec_q area [tmpfile 2] [tmpfile 3]
set res [my_read_val [tmpfile 3]]
while {$res != 0} {
  puts "PASSAT: $res"
  my_exec_q sub [tmpfile 1] [tmpfile 2] [tmpfile 4]
  my_exec_q skeleton [tmpfile 4] $PASSAT(prio) 26 [tmpfile 1]
  my_exec_q simplepair [tmpfile 1] [tmpfile 2]
  my_exec_q area [tmpfile 2] [tmpfile 3]
  set res [my_read_val [tmpfile 3]]
}

my_exec_q cp [tmpfile 1] $PASSAT(outfilename)
